---
layout: post
title: Full-Time/Part-Time Co-Founder Dynamics
hn: http://news.ycombinator.com/item?id=4055531
header_img: "pub.jpg"
---
<p>I received a lot of feedback, via <a href="http://news.ycombinator.com/item?id=4044044">Hacker News</a>, Twitter, and email, from my post titled <a href="http://ericfarkas.com/posts/how-to-do-a-startup-on-the-side-and-not-lose-your-family/">How To Do A Startup On The Side And Not Lose Your Family</a>.  Based on that feedback, I have a lot of ideas for future posts.  There are a lot of people out there trying to do the "startup on the side" thing while leading a full family life, and perhaps there hasn't been a lot written specifically for that group.  I do not claim to be an expert, but my experience, limited though it may be, might be helpful for those folks.  This post is about co-founder dynamics, particularly in the case of one co-founder being full-time, the other being part-time.</p>

<p>As with my last post, this is simply my <a href="http://epistemocrat.blogspot.com/">n=1</a> experience.  What follows is not meant to be prescriptive but rather descriptive.  It might seem crazy and foolish but it works for me.</p>

<h3>School of Hard Knocks</h3>
<p>In 2005, 3 of my friends and I created a social networking startup. My 3 co-founders were working on the project full-time.  I had just gotten married, and was one year into a great job as a Java developer at a large bank in NYC, with a baby on the way.  There was no way I was leaving that situation to chase the dream full-time.  So our setup was 3 full-time guys, me part-time, with the expectation that through either revenue or investment, I'd one day be able to work full-time.  I wound up leaving before I had that opportunity, after about 18 months.  I was terrible at balancing work/life/startup, and the strain on my young marriage caused me to neglect working on the startup, which was not fair to my co-founders.  A graceful exit was the best option for all parties.</p>

<p>In 2009 I joined <a href="http://talentsoup.com">TalentSoup</a>.  My co-founder, Rad Harrell, had started the company in 2006, and brought me on board as a technical co-founder.  The setup there was similar: Rad does TalentSoup full-time, it's how he feeds his family.  I do my work part-time.</p>

<p>So that's my experience.  Two startups, both done part-time while my co-founders were full-time.  The first was unsustainable for me, my involvement in the second is still going strong after 2 1/2 years.</p>

<h3>Qualities To Look For In A co-founder</h3>
<p>Before discussing the dynamics of how co-founders work together, let's take a step back and talk about beginning that relationship in the first place.  Much has been written about the qualities to look for in a co-founder, technical or otherwise.  To me, the most important thing is character.  Do they value what I value?  Are their priorities, even if they don't have a family like me, the same as mine?  Do we have common ground on which to relate to one another, and understand each other?  Is this person not only trustworthy, but open and honest?  These are not trivial concerns.  Doing a startup is very similar to a marriage in that, in many ways, you are sharing a part of your soul with another person.  Anything that you find mildly annoying or grating about the other person will certainly show up, magnified 1,000 times, in a co-founder relationship, especially one that takes place in the context of having a family and other external pressures.</p>

<p>Trusthworthiness, which is the part of character that's the most important to me, is a tricky thing to test for.  I've lived and worked in New York my whole life, and as a result I've developed stereotypical New York cynicism.  I default to "I'm not buying it".  This cynicism, while sometimes harmful in other areas, is absolutely an asset for testing trustworthiness.  When someone speaks to me, does my instinct incline me to believe them, or dismiss what they're saying?  I think I have a good instinct for that kind of stuff, developed over time, having heard dozens of startup ideas and talked to countless people.</p>

<p>This came in handy when I first spoke to Rad.  We had a phone conversation for an hour, and he pitched me on the project.  He was open about everything: the past, the current state of the company in all areas,  what his vision for the future was, and what he was willing to give to get me on board.  There was a recognition that I would be the technology lead, that his expertise was limited in that area, and I'd have freedom to do what I felt needed to be done.  You might think that's too much information to give in a first discussion, but his openness, as well as my gut telling me that this guy was being absolutely real with me, endeared me to him.  I remember telling my wife that I liked Rad so much after that call, I felt like I wanted to do the startup just to see him succeed, never mind what would be in it for me.</p>

<p>This whole trust thing is the cornerstone to the whole co-founder relationship.  As you'll see shortly.</p>

<h3>The Dirty Details</h3>
<p>So now you've found a co-founder.  If both of you are going to work full-time, it's pretty easy to decide you'll split the equity somewhere around 50/50.  But what if one of you works full-time while the other works part-time?  How do you split equity? This is where things get tricky.</p>

<p>Keep this in mind: your number one goal in a startup is to ship something people want.  Especially in the early stages, work has to happen at a fast and furious pace.  You are in constant shipping mode.  Whenever you're actually sitting down, working on your startup, a couple of hours wasted on anything other than shipping code is a disaster. Keeping this in mind will help in two ways when deciding equity splits:</p>
<ul>
    <li><p>Even though figuring this split out is very important, it's not the most important thing.</p></li>
    <li><p>When you're spending energy on anything in an early startup (including equity splits), you're asking: "How will this help me ship code?"</p></li>
</ul>

<p>That second point often gets lost in the mix when these discussions take place.  I've seen things like this: <i>"I'm full-time and I get X%, my part-time co-founder gets Y%, and when he goes full-time, I'll have X-10% and he'll get Y+10%"</i>.  I've been the guy on the other side of that equation, and I can tell you that it doesn't motivate me to know that I get more equity if I am full-time.  In fact, I think knowing that there's more % waiting for me if I can just cross the full-time chasm actually stresses me out, which affects me emotionally, which affects me mentally, which negatively impacts my ability to...wait for it...ship code.  Call me weak-minded but that's how I'm wired.  You might be different; n=1.  Maybe the aforementioned approach works for your personality type, in which case, do it!</p>

<p>So whatever you are thinking the percentage splits are, might I suggest just making them that way from the start?  Of course everyone should be vested, and the appropriate contractual steps should be taken to ensure everyone's backs are covered.  But if, as the full-time guy, you really trust your co-founder, and really trust that he's working as hard as he can to make the company a success, then why not start with whatever your "when you're full-time" percentage is?  If you can't trust your co-founder, then maybe you should find another one.</p>

<p>Notice I am not suggesting hard and fast percentage amounts.  There are alot of considerations: which one is the technical co-founder, and therefore actually building the product?  Are both?  Are neither?  Has either partner invested money into the company for bootstrapping?  Is the business existing and profitable already? In these discussions, be open and honest with your wants.</p>

<p>It comes down to this: the equity split shouldn't be used a carrot on a stick, but rather as a tool to create good morale for the people involved in the startup.  By all means, vest, and CYA with contracts, etc., but at the end of the day, you either trust your partner or you don't.</p>

<h3>Actual Working</h3>

<p>You have a co-founder, and you have all the equity stuff worked out so you'll know how many millions you'll get when Google acquires you.  You want your Ferrari in red, right?  With black leather?  Sure, we can do that.</p>

<p>Now you get to work.  You hustle and make the most of all the time you have, balancing as you go.  You make use of things like <a href="http://basecamp.com">Basecamp</a>, <a href="http://campfirenow.com/">Campfire</a>, iChat, text messages, etc. to communicate asynchronously.  And you don't IM your partner about a bug, you open a new issue in <a href="http://github.com">GitHub</a> so he can look at it when it's convenient for him, and you both have a log to refer back to.  If you're a non-technical co-founder, you learn basic HTML so you can do copy work on the site, and you learn how git works so you can be involved.  Spencer Fry wrote a <a href="http://spencerfry.com/whats-a-non-programmer-to-do">great post</a> about this a while back.  If you're the technical guy, you look at how you can make your co-founder's life easier through automating common admin tasks. Most of all, you...chill out.  If your co-founder takes a night, or two, or three off, it's ok.  Because you trust him.  He's not "deceiving me by not working for his fair share", he's doing what he needs to do, and when he gets back you know he's going to kill it.</p>

<p>TalentSoup was an existing business making money when I joined, but it was not a freestanding entity.  That's changed.  We've automated many of the administrative tasks around the site, things Rad was doing manually, or tasks he wanted to do but could not.  This increased efficiencies, meaning we could do more work in less time, and therefore make more money because we could handle more jobs simultanenously.  We could focus on serving clients and not on the tedious stuff.  I also conceived and implemented our paid subscription service, <a href="https://talentsoup.com/signup">Webcomp Pro</a>, which created a new revenue stream.  In other words, I am not just building features that Rad dreamt up.  I am actively involved in product development, short-term and long-term, always on the lookout to create revenue through increasing our efficiency, or introducing a new product.  I am a partner in the business, with an equity state that makes me happy and frees me to think about shipping code, not chasing a carrot.</p>

<p>Flexibility in the when and where is also very important.  Don't set a "minimum expected hours per week".  If you're working with someone who has a full-time job and family, and you add the expectation of X amount of hours per week on top of that to justify an equity percentage, it's going to be more harmful than helpful.  I speak from personal experience, being that family guy.  Now of course, if over the long term your partner is not pulling their weight, then you say what needs to be said, or do what needs to be done.  But I like the idea of judging based on results only.  If I am consistently shipping code that customers are using, and we are making money, does it matter how many hours I worked last week, or that I worked those hours in my boxers in bed late at night while everyone is sleeping?  No, it does not.  Ship code.  Everything else is details.</p>

<p>You also celebrate success, however small.  New feature launched?  Let's have some beers together over iChat.  First paying customer? Alright!  Our 1,000th user just signed up?  Let's take the night off and take our wives out.  Working asynchronously, in different locations (Rad is in beautiful Savannah, GA and I am on Long Island), means you have to be intentional about building the camraderie that being in the same room would normally bring.  It's not easy, but it can be done.  Sometimes I laugh at myself for the ridiculous things I celebrate, like fixing an annoying bug or changing the layout of a page, but then I remember these small celebrations are necessary because they give me an emotional boost, which helps me ship code.</p>

<h3>Choose Your Own Adventure</h3>
<p>I was on a job interview once, and the person interviewing me asked what I consider success to be, just generally, not necessarily with relation to work, though it could be that.  Whatever came into my mind.  My honest answer was that success to me meant having a strong marriage, and children who grow up to love me and love God as well.  I was kind of surprised by my answer.  Before any business achievement, that's how I define success.  And given that, my relationship with my co-founder makes perfect sense.  And he is the same way (step 1: same values).  We want TalentSoup to succeed financially.  I want to make a lot of money; I am not embarrassed about that.  But more than that I want to have a strong family, I want to live a good life and enjoy it.  So I work hard, yes, but I also remember to relax and slow down.  I don't stress about what Rad is or isn't doing, because I trust him, and he trusts me.  If something needs to be said, either of us would say it.  And if things completely broke down, there are legal structures in place to protect both of us.  But I don't operate out of that.  I operate on the assumption that we're both trying to build something beautiful together, in good faith, and if over a short period of time life gets in the way, that's ok.</p>

<p>If you're doing a startup on the side while you have a family, you're already choosing a difficult path.  Don't make it worse by partnering up with someone you can't trust.</p>